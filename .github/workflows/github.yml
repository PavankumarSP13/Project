name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev
      

jobs:
  build:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Grant execute permission for gradlew
      run: chmod +x ./Github_Actions/mea-itaas/github-service/gradlew

    - name: Build the project
      run: ./gradlew build
      working-directory: ./Github_Actions/mea-itaas/github-service


    - name: List build directory contents
      run: ls -al ./Github_Actions/mea-itaas/github-service/build/libs

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-artifact
        path: ./Github_Actions/mea-itaas/github-service/build/libs/feedback-service-0.1.0.jar

  deploy_to_dev:
    runs-on: self-hosted
    needs: build
    if: github.ref == 'refs/heads/dev' || github.event.pull_request.base.ref == 'dev'

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifact

    - name: Copy JAR to target directory
      run: cp ./feedback-service-0.1.0.jar /home/tricon/helloSignUpgradedJars

    - name: Execute deployment script on dev server
      run: |
            sshpass -p ${{ secrets.BACKEND_SERVER_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.BACKEND_USER }}@${{ secrets.DEV_SERVER_IP }} << 'EOF'
            # Same deployment script as before
            EOF

  deploy_to_prod:
    runs-on: self-hosted
    needs: build
    if: github.ref == 'refs/heads/main' || github.event.pull_request.base.ref == 'main'

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifact

    - name: Copy JAR to target directory
      run: cp ./feedback-service-0.1.0.jar /home/tricon/helloSignUpgradedProductionJars

    - name: Execute deployment script on prod server
      run: |
            sshpass -p ${{ secrets.BACKEND_SERVER_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.BACKEND_USER }}@${{ secrets.PROD_BACKEND_SERVER_IP }} << 'EOF'
            # Same deployment script as before
            EOF
