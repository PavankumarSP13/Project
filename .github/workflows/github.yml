name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Grant execute permission for gradlew
      run: chmod +x ./Github_Actions/mea-itaas/github-service/gradlew

    - name: Build the project
      run: ./gradlew build
      working-directory: ./Github_Actions/mea-itaas/github-service


    - name: List build directory contents
      run: ls -al ./Github_Actions/mea-itaas/github-service/build/libs

    - name: Copy JAR to target directory
      run: cp ./Github_Actions/mea-itaas/github-service/build/libs/feedback-service-0.1.0.jar /home/tricon/helloSignUpgradedJars

    - name: Execute deployment script on server
      run: |
            sshpass -p 'your_ssh_password' ssh -o StrictHostKeyChecking=no tricon@172.23.97.203 << 'EOF'
            # Define variables
            PORT=3010
            JAR_PATH="/home/tricon/helloSignUpgradedJars/feedback-service-0.1.0.jar"
            LOG_PATH="/home/tricon/logs/feedback-service/feedback-service.out"
            
            # Find and kill the existing process
            PID=$(sudo -S lsof -t -i :$PORT <<< 'your_sudo_password')
            cat "process-id= $PID"
            echo "Killing process $PID running on port $PORT"
            if [ -n "$PID" ]; then
              echo "Killing process $PID running on port $PORT"
              sudo kill -9 $PID
            else
              echo "No process found running on port $PORT"
            fi
            
            # Run the new JAR file
            echo "Starting new JAR file"
            nohup java -jar -Dspring.profiles.active=dev -Djsse.enableCBCProtection=false $JAR_PATH > $LOG_PATH 2>&1 &
