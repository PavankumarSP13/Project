name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Grant execute permission for gradlew
      run: chmod +x ./Github_Actions/mea-itaas/github-service/gradlew

    - name: Build the project
      run: ./gradlew build
      working-directory: ./Github_Actions/mea-itaas/github-service


    - name: List build directory contents
      run: ls -al ./Github_Actions/mea-itaas/github-service/build/libs

    - name: Copy JAR to target directory
      run: cp ./Github_Actions/mea-itaas/github-service/build/libs/feedback-service-0.1.0.jar /home/tricon/helloSignUpgradedJars

    - name: Execute deployment script on server
      env:
          BACKEND_SERVER_IP: ${{ secrets.BACKEND_SERVER_IP }}
          BACKEND_SERVER_PASSWORD: ${{ secrets.BACKEND_SERVER_PASSWORD }}
          FEEDBACK_SERVICE_PORT: ${{ secrets.FEEDBACK_SERVICE_PORT }}
      run: |
          sshpass -p "${{ secrets.BACKEND_SERVER_PASSWORD }}" ssh -o StrictHostKeyChecking=no tricon@${{ secrets.BACKEND_SERVER_IP }} << EOF
          # Define variables
          PORT=${FEEDBACK_SERVICE_PORT}
          JAR_PATH="/home/tricon/helloSignUpgradedJars/feedback-service-0.1.0.jar"
          LOG_PATH="/home/tricon/logs/feedback-service/feedback-service.out"
          JAVA_PATH="/usr/lib/jvm/java-17-openjdk-amd64/bin/java"
          
          # Find and kill the existing process
          PID=$(echo ${{ secrets.BACKEND_SERVER_PASSWORD }} | sudo -S lsof -t -i :$PORT)
          if [ -n "$PID" ]; then
            echo "Killing process $PID running on port $PORT"
            echo ${{ secrets.BACKEND_SERVER_PASSWORD }} | sudo -S kill -9 $PID
          else
            echo "No process found running on port $PORT"
          fi
          
          # Run the new JAR file
          echo "Starting new JAR file"
          echo ${{ secrets.BACKEND_SERVER_PASSWORD }} | sudo -S nohup $JAVA_PATH -jar -Dspring.profiles.active=dev -Djsse.enableCBCProtection=false $JAR_PATH > $LOG_PATH 2>&1 &
          EOF
